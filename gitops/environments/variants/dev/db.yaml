---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
spec:
  selector:
    app: postgresql
  ports:
    - name: pgsql
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
spec:
  serviceName: "postgresql"
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:15
          envFrom:
            - secretRef:
                name: init-postgresql
          ports:
            - name: tcp
              containerPort: 5432
          volumeMounts:
            - name: postgresql-storage
              mountPath: /var/lib/postgresql/data
              subPath: data
  volumeClaimTemplates:
    - metadata:
        name: postgresql-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: postgresql-create-db
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      containers:
        - name: postgresql-create-db
          image: postgres:15
          env:
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: init-postgresql
                key: POSTGRES_PASSWORD
          - name: PGUSER
            valueFrom:
              secretKeyRef:
                name: init-postgresql
                key: POSTGRES_USER
          command: ["/bin/sh"]
          args: ["-c", "psql -h postgres -lqt | cut -d \\| -f 1 | grep -qw cd_devx_tenant || createdb -h postgres cd_devx_tenant"]
      restartPolicy: Never
  backoffLimit: 1